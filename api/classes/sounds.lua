---@meta
---Sounds
---------

-- These sound files are played back by the engine if provided.
---@alias mt.SpecialSoundFile
-- Played when the local player takes damage (gain = 0.5).
---|"player_damage"
-- Played when the local player takes damage by falling (gain = 0.5).
---|"player_falling_damage"
-- Played when the local player jumps.
---|"player_jump"
-- Default node digging sound.
---|"default_dig_<groupname>"

---Specifies a sound name, gain (=volume) and pitch.
---This is either a string or a table.
---
---In string form, you just specify the sound name or
---the empty string for no sound.
---
---Table form has the following fields:
---
---* `name`: Sound name
---* `gain`: Volume (`1.0` = 100%)
---* `pitch`: Pitch (`1.0` = 100%)
---
---`gain` and `pitch` are optional and default to `1.0`.
---
---Examples:
---
---* `""`: No sound
---* `{}`: No sound
---* `"default_place_node"`: Play e.g. `default_place_node.ogg`
---* `{name = "default_place_node"}`: Same as above
---* `{name = "default_place_node", gain = 0.5}`: 50% volume
---* `{name = "default_place_node", gain = 0.9, pitch = 1.1}`: 90% volume, 110% pitch
---
---@class mt.SimpleSoundSpecTable
---@field name string|mt.SpecialSoundFile
--- * Volume (`1.0` = 100%), must be non-negative.
--- * At the end, OpenAL clamps sound gain to a maximum of `1.0`. By setting gain for
--- a positional sound higher than `1.0`, one can increase the radius inside which
--- maximal gain is reached.
--- * Furthermore, gain of positional sounds doesn't increase inside a 1 node radius.
--- * The gain given here describes the gain at a distance of 3 nodes.
--- * Default: `1.0`
---@field gain? number
--- * Applies a pitch-shift to the sound.
--- * Each factor of `2.0` results in a pitch-shift of +12 semitones.
--- * Must be positive.
--- * Default: `1.0`
---@field pitch? number
--- If > `0.0`, the sound is faded in, with this value in gain per second, until
--- `gain` is reached.
--- * Default: `0.0`
---@field fade? number
local sound_spec = {}

---@alias mt.SimpleSoundSpec mt.SimpleSoundSpecTable|string|mt.SpecialSoundFile

---Looped sounds must either be connected to an object or played locationless to
---one player using `to_player = name`.
---
---A positional sound will only be heard by players that are within
---`max_hear_distance` of the sound position, at the start of the sound.
---
---`exclude_player = name` can be applied to locationless, positional and object-
---bound sounds to exclude a single player from hearing them.
---@class mt.SoundParameters
---@field gain? number Scales the gain specified in `SimpleSoundSpec`. Default: `1.0`.
---@field pitch? number Overwrites the pitch specified in `SimpleSoundSpec`. Default: `1.0`.
---@field fade? number Overwrites the fade specified in `SimpleSoundSpec`. Default: `0.0`. Change to a value > 0 to fade the sound in.
--
-- * Start with a time-offset into the sound.
-- * The behavior is as if the sound was already playing for this many seconds.
-- * Negative values are relative to the sound's length, so the sound reaches
-- its end in `-start_time` seconds.
-- * It is unspecified what happens if `loop` is false and `start_time` is
-- smaller than minus the sound's length.
-- * Available since feature `sound_params_start_time`.
-- * Default: `1.0`.
---@field start_time? string
---@field loop? boolean Default: `false`.
---@field pos? mt.Vector Play sound at a position. <br> Can't be used together with `object`.
---@field object? mt.ObjectRef Attach the sound to an object. <br> Can't be used together with `pos`.
---@field to_player? string A player name. Only play for this player. <br> Can't be used together with `exclude_player`.
---@field exclude_player? string A player name. Don't play sound for this player. <br> Can't be used together with `to_player`.
--- * Only play for players that are at most this far away when the sound starts playing.
--- * Needs `pos` or `object` to be set.
--- * Default: `32`.
---@field max_hear_distance? number
local sound_parameters = {}
